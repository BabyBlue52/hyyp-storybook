{"version":3,"file":"elevation-ac3d1016.js","sources":["../../node_modules/vuetify/lib/components/VDefaultsProvider/VDefaultsProvider.mjs","../../node_modules/vuetify/lib/composables/variant.mjs","../../node_modules/vuetify/lib/composables/border.mjs","../../node_modules/vuetify/lib/composables/elevation.mjs"],"sourcesContent":["// Composables\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { toRefs } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nexport const makeVDefaultsProviderProps = propsFactory({\n  defaults: Object,\n  disabled: Boolean,\n  reset: [Number, String],\n  root: [Boolean, String],\n  scoped: Boolean\n}, 'VDefaultsProvider');\nexport const VDefaultsProvider = genericComponent(false)({\n  name: 'VDefaultsProvider',\n  props: makeVDefaultsProviderProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      defaults,\n      disabled,\n      reset,\n      root,\n      scoped\n    } = toRefs(props);\n    provideDefaults(defaults, {\n      reset,\n      root,\n      scoped,\n      disabled\n    });\n    return () => slots.default?.();\n  }\n});\n//# sourceMappingURL=VDefaultsProvider.mjs.map","import { createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Composables\nimport { useColor } from \"./color.mjs\"; // Utilities\nimport { computed, unref } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\nexport const allowedVariants = ['elevated', 'flat', 'tonal', 'outlined', 'text', 'plain'];\nexport function genOverlays(isClickable, name) {\n  return _createVNode(_Fragment, null, [isClickable && _createVNode(\"span\", {\n    \"key\": \"overlay\",\n    \"class\": `${name}__overlay`\n  }, null), _createVNode(\"span\", {\n    \"key\": \"underlay\",\n    \"class\": `${name}__underlay`\n  }, null)]);\n}\nexport const makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String,\n    default: 'elevated',\n    validator: v => allowedVariants.includes(v)\n  }\n}, 'variant');\nexport function useVariant(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const variantClasses = computed(() => {\n    const {\n      variant\n    } = unref(props);\n    return `${name}--variant-${variant}`;\n  });\n  const {\n    colorClasses,\n    colorStyles\n  } = useColor(computed(() => {\n    const {\n      variant,\n      color\n    } = unref(props);\n    return {\n      [['elevated', 'flat'].includes(variant) ? 'background' : 'text']: color\n    };\n  }));\n  return {\n    colorClasses,\n    colorStyles,\n    variantClasses\n  };\n}\n//# sourceMappingURL=variant.mjs.map","// Utilities\nimport { computed, isRef } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeBorderProps = propsFactory({\n  border: [Boolean, Number, String]\n}, 'border');\nexport function useBorder(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const borderClasses = computed(() => {\n    const border = isRef(props) ? props.value : props.border;\n    const classes = [];\n    if (border === true || border === '') {\n      classes.push(`${name}--border`);\n    } else if (typeof border === 'string' || border === 0) {\n      for (const value of String(border).split(' ')) {\n        classes.push(`border-${value}`);\n      }\n    }\n    return classes;\n  });\n  return {\n    borderClasses\n  };\n}\n//# sourceMappingURL=border.mjs.map","// Utilities\nimport { computed, isRef } from 'vue';\nimport { propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator(v) {\n      const value = parseInt(v);\n      return !isNaN(value) && value >= 0 &&\n      // Material Design has a maximum elevation of 24\n      // https://material.io/design/environment/elevation.html#default-elevations\n      value <= 24;\n    }\n  }\n}, 'elevation');\nexport function useElevation(props) {\n  const elevationClasses = computed(() => {\n    const elevation = isRef(props) ? props.value : props.elevation;\n    const classes = [];\n    if (elevation == null) return classes;\n    classes.push(`elevation-${elevation}`);\n    return classes;\n  });\n  return {\n    elevationClasses\n  };\n}\n//# sourceMappingURL=elevation.mjs.map"],"names":["makeVDefaultsProviderProps","propsFactory","VDefaultsProvider","genericComponent","props","_ref","slots","defaults","disabled","reset","root","scoped","toRefs","provideDefaults","_a","allowedVariants","genOverlays","isClickable","name","_createVNode","_Fragment","makeVariantProps","v","useVariant","getCurrentInstanceName","variantClasses","computed","variant","unref","colorClasses","colorStyles","useColor","color","makeBorderProps","useBorder","border","isRef","classes","value","makeElevationProps","useElevation","elevation"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}